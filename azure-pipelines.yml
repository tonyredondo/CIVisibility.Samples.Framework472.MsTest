# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  ddApiKey: $(DD_API_KEY)

  # Environment CI.
  DD_ENV: CI

  # Use CI Visibility Agentless mode.
  DD_CIVISIBILITY_AGENTLESS_ENABLED: 1

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


# **********************************************************

# Ensure dotnet 6.0 SDK (required to install dd-trace CLI)
- task: UseDotNet@2
  displayName: (CI-VISIBILITY) Install dotnet core SDK 6
  inputs:
    packageType: sdk
    version: 6.x

# Install dotnet dd-trace tool
- task: CmdLine@2
  displayName: (CI-VISIBILITY) Install dd-trace dotnet tool
  inputs:
    script: dotnet tool update -g dd-trace

# Ensure logs folder exists
- task: CmdLine@2
  displayName: (CI-VISIBILITY) Create Logs folder
  condition: always()
  inputs:
    script: mkdir "%PROGRAMDATA%\Datadog .NET Tracer\logs"

# Configure pipeline to use CI Visibility
- task: CmdLine@2
  displayName: (CI-VISIBILITY) Configure pipeline to use CI Visibility
  inputs:
    script: dd-trace ci configure

# **********************************************************

- task: VSTest@2
  env:
    DD_API_KEY: $(ddApiKey)
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


# **********************************************************

# Configure pipeline to use CI Visibility
- task: CmdLine@2
  displayName: (CI-VISIBILITY) List CI Visibility logs list
  condition: always()
  inputs:
    script: dir
    workingDirectory: "%PROGRAMDATA%/Datadog .NET Tracer/logs"

# **********************************************************
